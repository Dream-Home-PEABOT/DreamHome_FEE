[{"/Users/bdizzle/Desktop/codebases/4-mod/fee-dreamhome/src/components/App/App.tsx":"1","/Users/bdizzle/Desktop/codebases/4-mod/fee-dreamhome/src/apiCalls.tsx":"2","/Users/bdizzle/Desktop/codebases/4-mod/fee-dreamhome/src/components/Home/Home.tsx":"3","/Users/bdizzle/Desktop/codebases/4-mod/fee-dreamhome/src/index.tsx":"4","/Users/bdizzle/Desktop/codebases/4-mod/fee-dreamhome/src/reportWebVitals.ts":"5","/Users/bdizzle/Desktop/codebases/4-mod/fee-dreamhome/src/types.tsx":"6","/Users/bdizzle/Desktop/codebases/4-mod/fee-dreamhome/src/components/Question/Question.tsx":"7","/Users/bdizzle/Desktop/codebases/4-mod/fee-dreamhome/src/components/NavBar/NavBar.tsx":"8","/Users/bdizzle/Desktop/codebases/4-mod/fee-dreamhome/src/components/GenerateReport/GenerateReport.tsx":"9","/Users/bdizzle/Desktop/codebases/4-mod/fee-dreamhome/src/components/Journey/Journey.tsx":"10","/Users/bdizzle/Desktop/codebases/4-mod/fee-dreamhome/src/components/Survey/Survey.tsx":"11"},{"size":922,"mtime":1610049630667,"results":"12","hashOfConfig":"13"},{"size":134,"mtime":1610048050426,"results":"14","hashOfConfig":"13"},{"size":634,"mtime":1610048084562,"results":"15","hashOfConfig":"13"},{"size":331,"mtime":1610048050432,"results":"16","hashOfConfig":"13"},{"size":425,"mtime":1609710165363,"results":"17","hashOfConfig":"13"},{"size":727,"mtime":1610048050432,"results":"18","hashOfConfig":"13"},{"size":2454,"mtime":1610049630672,"results":"19","hashOfConfig":"13"},{"size":359,"mtime":1609981698083,"results":"20","hashOfConfig":"13"},{"size":1456,"mtime":1610048084561,"results":"21","hashOfConfig":"13"},{"size":1066,"mtime":1610048084563,"results":"22","hashOfConfig":"13"},{"size":2482,"mtime":1610048084565,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1mi6cd8",{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"28"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"28"},"/Users/bdizzle/Desktop/codebases/4-mod/fee-dreamhome/src/components/App/App.tsx",["51"],"/Users/bdizzle/Desktop/codebases/4-mod/fee-dreamhome/src/apiCalls.tsx",[],["52","53"],"/Users/bdizzle/Desktop/codebases/4-mod/fee-dreamhome/src/components/Home/Home.tsx",["54","55"],"import React, { useState, useEffect } from 'react';\n\nconst Home: React.FC = () => {\n\n  return (\n    <div>\n      <h1>My Dream Home</h1>\n      <h2>Journey Edition</h2>\n      <div>\n        <h2>Menu</h2>\n        <ul>\n          {/*<li href='#'>About</li>*/}\n          {/*<li href='#'>Journey</li>*/}\n          {/*<li href='#'>Log In</li>*/}\n        </ul>\n      </div>\n    </div>\n  )\n}\nexport default Home;\n","/Users/bdizzle/Desktop/codebases/4-mod/fee-dreamhome/src/index.tsx",[],"/Users/bdizzle/Desktop/codebases/4-mod/fee-dreamhome/src/reportWebVitals.ts",[],"/Users/bdizzle/Desktop/codebases/4-mod/fee-dreamhome/src/types.tsx",[],"/Users/bdizzle/Desktop/codebases/4-mod/fee-dreamhome/src/components/Question/Question.tsx",["56"],"import React, { useState, useContext}  from 'react';\nimport {QuestionContext, AnswerContext} from '../../types';\nimport './Question.css'\nimport bkg_img from '../../images/questions/Big Shoes - Sitting On Floor.png'\nimport location_img from '../../images/questions/Charco - Location Map.png'\n\n  interface Props{\n    updateAllAnswers: any;\n    currentQuestion: string;\n  }\n  export const Question: React.FC<Props> = ({updateAllAnswers, currentQuestion}) => {\n    const answerContext = useContext(AnswerContext)\n    const questionContext = useContext(QuestionContext)\n    const [answerInput, updateAnswer] = useState<any>({question: '', answer: ''});\n  return (\n    <section className='question-section'>\n      \n      <div className=\"inner-container\">\n\n        <div className='desc-container'>\n          <div className=\"description-box\">\n            <h1 className=\"question-desc\">Yearly Salary After Taxes</h1>\n            <h2 className='desc'>\"Gross income is the total amount you earn (typically over the course of a year) before expenses. Net income is the profit your business earns after expenses .</h2>\n            <h2 className='desc'>\"Gross income is the total amount you earn (typically over the course of a year) before expenses. Net income is the profit your business earns after expenses .</h2>\n          </div>\n        </div>\n        \n        <div className='question_img-box_1'>\n          <img src={bkg_img} alt=\"\" className='question_img'/>\n        </div>\n\n        <div className='question_img-box_2'>\n          <img src={location_img} alt=\"\" className='location_img'/>\n        </div>\n\n        <div className=\"buttons-box\">\n          <button className='back-btn btn'>back</button>\n          <button className='next-btn btn'\n          onClick={()=>updateAllAnswers({...answerContext, [currentQuestion]: answerInput.answer})}>next</button>\n        </div>\n\n        <div className=\"question-box\">\n          <h1 className=\"question\">{currentQuestion}</h1>\n        </div>\n        <div className=\"input-box\">\n          <input type=\"text\" className=\"input\"\n            onChange={(e)=>updateAnswer({...answerInput, answer: e.target.value})}/>\n        </div>\n        <div className=\"note-box\">\n          <h4 className=\"note\">The amount of money you earn plays a smaller role in getting a mortgage than you might think.</h4>\n        </div>\n\n      \n          <div className='floor-box'></div>\n      </div>\n    </section>\n  );\n};\n\nexport default Question\n","/Users/bdizzle/Desktop/codebases/4-mod/fee-dreamhome/src/components/NavBar/NavBar.tsx",[],"/Users/bdizzle/Desktop/codebases/4-mod/fee-dreamhome/src/components/GenerateReport/GenerateReport.tsx",[],"/Users/bdizzle/Desktop/codebases/4-mod/fee-dreamhome/src/components/Journey/Journey.tsx",["57","58"],"\nimport React, { useState, useEffect } from 'react';\nimport './Journey.css'\nimport bkg_img from '../../images/journey/Big Shoes - Hero.png'\n\n\nconst Journey:React.FC = () => {\n\n  return (\n    <section className='journey-section'>\n\n      <div className=\"container\">\n\n        <div className='information-container'>\n          <div className=\"info-box\">\n            <h2 className='info'>Hi, my name is Teki and I will be here to accompany you throughout this journey. One thing you should know is that I am a vocabulary specialist.</h2>\n          </div>\n        \n        </div>\n\n        <div className=\"box-title\">\n          <div className=\"title-container\">\n            <h1 className='title'>My</h1>\n            <h1 className='title-2'>Dream Home</h1>\n          </div>\n        </div>\n        \n        <div className='img-box'>\n          <img src={bkg_img} alt=\"\" className='journey-img'/>\n        </div>\n\n        <div className=\"btn-container\">\n          <button className=\"btn\">Start</button>\n        </div>\n\n      </div>\n\n    </section>\n  )\n}\n\nexport default Journey;","/Users/bdizzle/Desktop/codebases/4-mod/fee-dreamhome/src/components/Survey/Survey.tsx",["59","60"],"import React, {useEffect, useContext, useState} from 'react';\nimport {AllQuestionFormat, AnswerContext, QuestionContext} from '../../types';\nimport {Question} from '../Question/Question';\nimport './Survey.css'\nimport bkg_img_2 from '../../images/survey/Big Shoes - Sitting on Rock Blue.png'\nimport bkg_img_1 from '../../images/survey/Big Shoes - Sitting on Rock Yellow.png'\nexport const Survey: React.FC = () => {\n  const thisContext = useContext(QuestionContext)\n  const [answerKey, updateAnswers] = useState<AllQuestionFormat | null>(null);\n  let questionKeys: null;\n  useEffect(() => {\n    if(thisContext){\n    questionKeys = Object.keys(thisContext).reduce((acc: any,cur)=>{\n        acc[cur] = ''\n        console.log(acc)\n        return acc\n      },{})\n    updateAnswers(questionKeys)\n    }\n  }, [thisContext]);\n  \n  return (\n    <AnswerContext.Provider value={answerKey}>\n      <section className='survey-container'>\n\n        <div className='inner-container'>\n\n          <div className='info-container'>\n            <div className=\"info-box\">\n              <h2 className='info'>One of the main questions to answers is how much can I afford?. Affordability is defined as the cost of something.</h2>\n            </div>\n          </div>\n\n          <div className=\"shadow-box\"></div>\n\n          <div className='img-box_1'>\n            <img src={bkg_img_1} alt=\"\" className='img'/>\n          </div>\n\n          <div className='img-box_2'>\n            <img src={bkg_img_2} alt=\"\" className='img'/>\n          </div>\n          <div className='floor-box'></div>\n\n          <div className=\"survey-btn\">\n            <button className=\"btn\">Start</button>\n          </div>\n\n          <div className=\"survey-box\">\n            <div className=\"survey\">\n              <p className=\"content\">While every person’s situation is different (and some loans may have different guidelines), here are the generally recommended guidelines based on your gross monthly income (that’s before taxes):\n                Your mortgage payment should be 28% or less.\n                Your debt-to-income ratio (DTI) should be 36% or less.\n                Your housing expenses should be 29% or less. This is for things like insurance, taxes, maintenance, and repairs.\n                You should have three months of housing payments and expenses saved up.\n                </p>\n              </div>\n          </div>\n        </div>\n      </section>\n     </AnswerContext.Provider>\n  );\n};\n\nexport default Survey;\n",{"ruleId":"61","severity":1,"message":"62","line":1,"column":26,"nodeType":"63","messageId":"64","endLine":1,"endColumn":36},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"61","severity":1,"message":"69","line":1,"column":17,"nodeType":"63","messageId":"64","endLine":1,"endColumn":25},{"ruleId":"61","severity":1,"message":"70","line":1,"column":27,"nodeType":"63","messageId":"64","endLine":1,"endColumn":36},{"ruleId":"61","severity":1,"message":"71","line":13,"column":11,"nodeType":"63","messageId":"64","endLine":13,"endColumn":26},{"ruleId":"61","severity":1,"message":"69","line":2,"column":17,"nodeType":"63","messageId":"64","endLine":2,"endColumn":25},{"ruleId":"61","severity":1,"message":"70","line":2,"column":27,"nodeType":"63","messageId":"64","endLine":2,"endColumn":36},{"ruleId":"61","severity":1,"message":"72","line":3,"column":9,"nodeType":"63","messageId":"64","endLine":3,"endColumn":17},{"ruleId":"73","severity":1,"message":"74","line":13,"column":20,"nodeType":"75","endLine":17,"endColumn":12},"@typescript-eslint/no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","no-native-reassign",["76"],"no-negated-in-lhs",["77"],"'useState' is defined but never used.","'useEffect' is defined but never used.","'questionContext' is assigned a value but never used.","'Question' is defined but never used.","react-hooks/exhaustive-deps","Assignments to the 'questionKeys' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","no-global-assign","no-unsafe-negation"]