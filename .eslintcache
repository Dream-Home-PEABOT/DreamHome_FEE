[{"/Users/bdizzle/Desktop/codebases/4-mod/fee-dreamhome/src/index.tsx":"1","/Users/bdizzle/Desktop/codebases/4-mod/fee-dreamhome/src/reportWebVitals.ts":"2","/Users/bdizzle/Desktop/codebases/4-mod/fee-dreamhome/src/components/App/App.tsx":"3","/Users/bdizzle/Desktop/codebases/4-mod/fee-dreamhome/src/types.tsx":"4","/Users/bdizzle/Desktop/codebases/4-mod/fee-dreamhome/src/apiCalls.tsx":"5","/Users/bdizzle/Desktop/codebases/4-mod/fee-dreamhome/src/components/Journey/Journey.tsx":"6","/Users/bdizzle/Desktop/codebases/4-mod/fee-dreamhome/src/components/Question/Question.tsx":"7","/Users/bdizzle/Desktop/codebases/4-mod/fee-dreamhome/src/components/Error/Error.tsx":"8","/Users/bdizzle/Desktop/codebases/4-mod/fee-dreamhome/src/components/Survey/Survey.tsx":"9","/Users/bdizzle/Desktop/codebases/4-mod/fee-dreamhome/src/components/NavBar/NavBar.tsx":"10","/Users/bdizzle/Desktop/codebases/4-mod/fee-dreamhome/src/components/Home/Home.tsx":"11","/Users/bdizzle/Desktop/codebases/4-mod/fee-dreamhome/src/components/GenerateReport/GenerateReport.tsx":"12","/Users/bdizzle/Desktop/codebases/4-mod/fee-dreamhome/src/components/Report/Report.tsx":"13","/Users/bdizzle/Desktop/codebases/4-mod/fee-dreamhome/src/components/Cube/Cube.tsx":"14","/Users/bdizzle/Desktop/codebases/4-mod/fee-dreamhome/src/components/NavItem/NavItem.tsx":"15","/Users/bdizzle/Desktop/codebases/4-mod/fee-dreamhome/src/components/ReportCategory/ReportCategory.tsx":"16"},{"size":392,"mtime":1610226055424,"results":"17","hashOfConfig":"18"},{"size":425,"mtime":1609710165363,"results":"19","hashOfConfig":"18"},{"size":2783,"mtime":1610404792045,"results":"20","hashOfConfig":"18"},{"size":799,"mtime":1610400689471,"results":"21","hashOfConfig":"18"},{"size":268,"mtime":1610400689462,"results":"22","hashOfConfig":"18"},{"size":1127,"mtime":1610405259597,"results":"23","hashOfConfig":"18"},{"size":3527,"mtime":1610404835264,"results":"24","hashOfConfig":"18"},{"size":829,"mtime":1610406242888,"results":"25","hashOfConfig":"18"},{"size":1924,"mtime":1610400689470,"results":"26","hashOfConfig":"18"},{"size":1417,"mtime":1610404792260,"results":"27","hashOfConfig":"18"},{"size":1058,"mtime":1610405300292,"results":"28","hashOfConfig":"18"},{"size":1916,"mtime":1610404715289,"results":"29","hashOfConfig":"18"},{"size":5611,"mtime":1610405259528,"results":"30","hashOfConfig":"18"},{"size":1610,"mtime":1610400689464,"results":"31","hashOfConfig":"18"},{"size":301,"mtime":1610404804327,"results":"32","hashOfConfig":"18"},{"size":4936,"mtime":1610404715212,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1mi6cd8",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"36"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"36"},"/Users/bdizzle/Desktop/codebases/4-mod/fee-dreamhome/src/index.tsx",[],["72","73"],"/Users/bdizzle/Desktop/codebases/4-mod/fee-dreamhome/src/reportWebVitals.ts",[],"/Users/bdizzle/Desktop/codebases/4-mod/fee-dreamhome/src/components/App/App.tsx",[],"/Users/bdizzle/Desktop/codebases/4-mod/fee-dreamhome/src/types.tsx",[],"/Users/bdizzle/Desktop/codebases/4-mod/fee-dreamhome/src/apiCalls.tsx",[],"/Users/bdizzle/Desktop/codebases/4-mod/fee-dreamhome/src/components/Journey/Journey.tsx",[],"/Users/bdizzle/Desktop/codebases/4-mod/fee-dreamhome/src/components/Question/Question.tsx",[],"/Users/bdizzle/Desktop/codebases/4-mod/fee-dreamhome/src/components/Error/Error.tsx",[],"/Users/bdizzle/Desktop/codebases/4-mod/fee-dreamhome/src/components/Survey/Survey.tsx",[],"/Users/bdizzle/Desktop/codebases/4-mod/fee-dreamhome/src/components/NavBar/NavBar.tsx",["74","75"],"import React, { useState, useContext }from 'react'\nimport './NavBar.css'\nimport {Link} from 'react-router-dom'\nimport { IoIosCloseCircleOutline } from \"react-icons/io\";\nimport { FiMenu } from \"react-icons/fi\";\nimport { NavItem } from \"../NavItem/NavItem\";\nimport {ReportContext} from '../../types'\n\nconst NavBar:React.FC = () => {\n\n  const [open, setOpen] = useState<boolean>(false);\n  \n\n  return (\n    <nav className='nav-container'>\n      <ul className=\"nav-bar\" >\n        <h1 className='menu-title'>menu</h1>\n        <NavItem \n          open={open } \n          setOpen={setOpen} \n          icon={!open ? <FiMenu data-testid=\"dropdown\" className='icon'/>\n          : <IoIosCloseCircleOutline className='icon'/>} >\n          <DropdownMenu/>\n\n        </NavItem>\n      </ul>\n    </nav>\n  )\n}\n\nconst DropdownMenu = () => {\n  let userReport = useContext(ReportContext)\n\n  const DropdownItem = (props: any) => {\n    \n    return(\n\n      <a href=\"#\" className=\"menu-item\" >\n\n        {props.children}\n      </a>\n    );\n  }\n\n  return (\n    <div className=\"dropdown\" >\n\n      <Link to=\"/home\" >\n        <DropdownItem >Home</DropdownItem>\n      </Link>\n\n      <Link to=\"/journey\">\n        <DropdownItem>Journey</DropdownItem>\n      </Link>\n\n      <DropdownItem>Login</DropdownItem>\n\n      {userReport && <Link to=\"/report\">\n      <DropdownItem >Report</DropdownItem>\n      </Link>}\n\n    </div>\n  )\n}\n\n\n\n\n\nexport default NavBar\n","/Users/bdizzle/Desktop/codebases/4-mod/fee-dreamhome/src/components/Home/Home.tsx",[],"/Users/bdizzle/Desktop/codebases/4-mod/fee-dreamhome/src/components/GenerateReport/GenerateReport.tsx",["76","77","78","79","80"],"import React, {useEffect, useContext} from 'react'\nimport { Link, Redirect, useHistory} from 'react-router-dom';\nimport {ReportContext} from '../../types'\nimport {getReport} from '../../apiCalls'\nimport './GenerateReport.css'\nimport calculate_img from '../../images/calculate/Big Shoes - Sitting On Floor.png'\nimport back_img from '../../images/calculate/Charco - Security.png'\n\ninterface Props{\n  updateReport: any;\n}\n\nconst GenerateReport: React.FC<Props> = ({ updateReport}) => {\n  const history = useHistory()\n  const report = useContext(ReportContext)\n\n  const requestReport = () =>{\n    getReport().then((data: any) => updateReport(data))\n    // getReport().then((data) => setTimeout(() => updateReport(data), 10000))\n  }\n\n\n  \n\n  return (\n    <section className='generate-section'>\n      <div className='inner-container'>\n\n      <div className='desc-container'>\n\n          <div className=\"description-box\">\n            <h1 className=\"question-desc\">Yearly Salary After Taxes</h1>\n            <h2 className='desc'>\"Gross income is the total amount you earn (typically over the course of a year) before expenses. Net income is the profit your business earns after expenses .</h2>\n            <h2 className='desc'>\"Gross income is the total amount you earn (typically over the course of a year) before expenses. Net income is the profit your business earns after expenses .</h2>\n          </div>\n        </div>\n\n        <div className='question_img-box_1'>\n          <img src={calculate_img} alt=\"teki-sitting\" className='question_img'/>\n        </div>\n\n        <div className='question_img-box_2'>\n          <img src={back_img} alt=\"background-graphics\" className='location_img'/>\n        </div>\n\n        <div className=\"buttons-box\">\n          <Link to=\"/report\">\n          <button className='submit-btn btn'\n            onClick={requestReport}>\n          Generate Report</button>\n          </Link>\n        </div>\n\n        <div className=\"box-detail-1\"></div>\n        <div className=\"box-detail-2\"></div>\n\n      </div>\n    </section>\n  )\n}\n\nexport default GenerateReport;\n","/Users/bdizzle/Desktop/codebases/4-mod/fee-dreamhome/src/components/Report/Report.tsx",["81","82","83","84"],"//imports\nimport React, {useContext, useState, useEffect} from 'react'\nimport {ReportContext} from '../../types'\nimport { Cube } from '../Cube/Cube';\nimport './Report.css';\nimport { ReportCategory } from '../ReportCategory/ReportCategory';\nimport {Spring} from 'react-spring/renderprops';\nimport { Link } from 'react-router-dom'\n\n//assets\nimport back_img from '../../images/report/Big Shoes - Jumping On One leg Pose.png';\n\n\n\nconst Report = () => {\n  \n  let userReport = useContext(ReportContext)\n\n  const displayAnalysisSections = () =>{\n    const reportData = Object.keys(userReport)\n    \n    return reportData.map((data, key) =>{\n      let subtitle_1 = Object.keys(userReport[data])[0].replaceAll(/_|\\-/g, \" \")\n      let subtitle_2 = Object.keys(userReport[data])[1].replaceAll(/_|\\-/g, \" \")\n\n      return (\n        <ReportCategory \n          \n          position={key + 1}\n          key={key}\n          plan={userReport[data].ten_year_plan}\n          categoryName={[data]}\n          categoryMainNumber={\n            userReport[data].zip_code\n            || userReport[data].based_on_rent\n            || userReport[data].monthly_principal\n            || userReport[data].down_payment_percentage_selected\n          }\n          categoryMainTitle={subtitle_1}\n          categorySubtitle={subtitle_2}\n          categorySecondNumber={\n            userReport[data].location\n            || userReport[data].goal_principal\n            || userReport[data].estimated_true_monthly\n            || userReport[data].down_payment_saved\n          }\n          categoryID={key + 1}\n          />\n      )\n    })\n  }\n\n  return (\n    <>\n    {!userReport ? <Cube/> : \n    <>\n     <section className=\"report-section\">\n        <div className='inner-container'>\n          <div className=\"app-title\">\n            <div className=\"title-container\">\n              <h1 className='title header'>My</h1>\n              <h1 className='title-2 header'>Dream Home</h1>\n              <div className=\"number-title-box\">\n                <h2 className=\"number-title\">My Numbers</h2>\n              </div>\n            </div>\n          </div>\n          \n          <div className=\"report-numbers-box\">\n\n            <div className=\"num \">\n              <div className=\"num-ci-box-up\">\n                <h1 className=\"num-ci-title\">Property tax</h1>\n              </div>\n              <Spring\n                config={{delay: 100, duration: 1000}}\n                from={{ number: 0 }}\n                to={{ number: userReport.monthly.add_ons.property_tax }}>\n                {props => <div className=\"num-ci-box-down\">\n                <h1 className=\"num-ci-data\">{props.number.toFixed()}</h1>\n              </div>}\n              </Spring>\n            </div>\n            {/* remove from here */}\n            <div className=\"num \">\n              <div className=\"num-ci-box-up\">\n                <h1 className=\"num-ci-title\">Downpayment %</h1>\n              </div>\n              <Spring\n                config={{delay: 100, duration: 1000}}\n                from={{ number: 0 }}\n                to={{ number: userReport.downpayment.down_payment_percentage_selected }}>\n                {props => \n                <div className=\"num-ci-box-down\">\n                  <h1 className=\"num-ci-data\">{props.number.toFixed()}</h1>\n                </div>}\n              </Spring>\n\n            </div>\n            <div className=\"num \">\n              <div className=\"num-ci-box-up\">\n                <h1 className=\"num-ci-title\">Mortgage term</h1>\n              </div>\n\n              <Spring\n                config={{delay: 100, duration: 1000}}\n                from={{ number: 0 }}\n                to={{ number: 30 }}>\n                {props => \n                <div className=\"num-ci-box-down\">\n                  <h1 className=\"num-ci-data\">{`${props.number.toFixed()}yrs`}</h1>\n                </div>}\n              </Spring>\n\n            </div>\n            <div className=\"num \">\n              <div className=\"num-ci-box-up\">\n                <h1 className=\"num-ci-title\">Credit Score</h1>\n              </div>\n\n              <Spring\n                config={{delay: 100, duration: 1000}}\n                from={{ number: 0 }}\n                to={{ number: 30 }}>\n                {props => \n                <div className=\"num-ci-box-down\">\n                  <h1 className=\"num-ci-data\">{`${props.number.toFixed()}yrs`}</h1>\n                </div>}\n              </Spring>\n\n            </div>\n            <div className=\"num \">\n              <div className=\"num-ci-box-up\">\n                <h1 className=\"num-ci-title\">Downpayment #</h1>\n              </div>\n\n              <Spring\n                config={{delay: 100, duration: 1000}}\n                from={{ number: 0 }}\n                to={{ number: userReport.downpayment.down_payment_saved }}>\n                {props => \n                <div className=\"num-ci-box-down\">\n                  <h1 className=\"num-ci-data\">{`$${props.number.toFixed()}`}</h1>\n                </div>}\n              </Spring>\n\n            </div>\n            \n          </div>\n          \n          <div className=\"report-title\">\n            <h1 className=\"big-report\">Report</h1>\n          </div>\n          <div className='report-img-box_1'>\n            <img src={back_img} alt=\"\" className='report_img'/>\n          </div>\n        </div>\n\n    </section>\n    \n    {displayAnalysisSections()}\n\n    <div className=\"sigup\">\n      <h1 className=\"fina-mess\">Sign-up \n      <Link to='/home'>\n        <span className='link' >\n          here \n        </span> \n      </Link>\n      if you want to know more...</h1>\n    </div>\n    </>\n    }\n    </>\n  )\n}\n\nexport default Report\n","/Users/bdizzle/Desktop/codebases/4-mod/fee-dreamhome/src/components/Cube/Cube.tsx",[],"/Users/bdizzle/Desktop/codebases/4-mod/fee-dreamhome/src/components/NavItem/NavItem.tsx",["85"],"import React  from 'react';\n \nexport const NavItem = (props: any) =>{\n\n  return( \n    <li className=\"nav-item\" >\n      <a href=\"#\" \n      \n        className=\"icon-button\" onClick={() =>props.setOpen(!props.open)}>\n        {props.icon}\n      </a>\n\n      {props.open && props.children}\n    </li>\n  )\n}\n\n","/Users/bdizzle/Desktop/codebases/4-mod/fee-dreamhome/src/components/ReportCategory/ReportCategory.tsx",["86"],"\n//imports\nimport React, {useState } from 'react'\nimport moment from 'moment'\n//assets\nimport location from '../../images/report/Charco - Location Map.png';\nimport plant_1 from '../../images/extras/Fancy Plants - Solo Plant.png';\nimport plant_2 from '../../images/extras/Fancy Plants - Solo Plant copy.png';\nimport downpayment from '../../images/report/Charco - Work at Home.png';\nimport hurry from '../../images/report/Big Shoes - Dynamic Pose.png';\n\nexport const ReportCategory = (props: any ) => {\n \n  const [year, setYear] = useState<string>('one');\n  const [currentPlan, setCurrentPlan] = useState(props.plan);\n\n  const displayPlanBtn = () => {\n    return Object.keys(props.plan).map((btn, index)=> {\n      return (\n        <button \n          onClick={() => updateValue(btn)}\n         \n          key={index}\n          className={\n            index % 2 === 0 \n            ? \" plan-btn btn y-btn\"\n            : index % 3 === 0 \n            ? \"btn-1 y-btn\"\n            :\"btn-2 y-btn\"\n          }>{index +1} \n            yr\n          </button>\n      )\n    })\n  }\n\n  //useEffect(() => {\n  //  if(props.plan){\n  //    setCurrentPlan(props.plan[year])\n  //  }\n  //})\n\n  const updateValue = (year: any) => {\n    setYear(year)\n    setCurrentPlan(props.plan[year])\n  }\n\n  return (\n    <>\n    <section \n      style={props.position% 2 === 0 ? {backgroundColor: 'white'}: {}}\n      className=\"analysis-section\">\n      <div \n        style={props.position% 2 === 0 ? {backgroundColor:'#89BD9E'}: {backgroundColor: 'white'}}\n        className=\"pipe-up\"></div>\n      <div\n        style={props.position% 2 === 0 ? {backgroundColor:'#89BD9E'}: {backgroundColor: 'white'}} \n        className=\"pipe-down\"></div>\n      <div className=\"main-circ-box\"><div \n        style={props.position% 2 === 0 ? {border:'15px solid #89BD9E'}: {border: '15px solid #ffffff'}} \n        className=\"inner-circle\"></div>\n      </div>\n      <div className=\"report-img-box\">\n        <img src={location} alt=\"\" className=\"report-img\"/>\n      </div>\n\n      <div  className=\"category-box\">\n        <h1 className=\"category-title\">{props.categoryName || ''}</h1>\n      </div>\n      <div className=\"report-info-1\">\n        {/* <h1 className=\"repo-title\">Location</h1> */}\n        <h1 className=\"repo-title\">{props.categoryMainTitle}</h1>\n      </div>\n\n      {!props.plan \n        ? <div className=\"report-info-2\">\n        <h1 className=\"repo-title\">{props.categorySubtitle || ''}</h1>\n        <h1 className=\"repo-title\">{props.categorySecondNumber || 0}</h1>\n        </div>\n        : \n        <>\n        <div className=\"plan-box\">\n          {displayPlanBtn()}\n          <h1 className=\"repo-title\">{}</h1>\n        </div>\n        <div className=\"btns-inst\">\n          <h1 className=\"inst-title\">Select a year to see your plan</h1>\n        </div>\n        </>\n      }\n\n      <div className=\"report-insight\">\n        {/* <h1 className=\"insight-title\">insight:</h1> */}\n        <h1 className=\"insight\">Property taxes and interest rates can vary by location.</h1>\n      </div>\n\n      <div className=\"category-image\">\n        {props.position % 2 === 0 && <img src={plant_1} alt=\"\" className='plant-1'/>}\n      </div>\n      {!props.plan && <div className=\"category-image-2\">\n        <img src={plant_2} alt=\"\" className='plant-1'/>\n        {/* <h1 className=\"insight-title\">{''}</h1> */}\n      </div>}\n\n      <h3 className=\"solo_number\">{props.categoryID || ''}</h3>\n      <h1 className=\"zip-title\"></h1>\n      <h1 className=\"report-zip\">{props.categoryMainNumber|| '' }</h1>\n    </section>\n\n    {props.plan \n      ?<section className='analysis-section'>\n        <div style={ {backgroundColor: 'white'}} className=\"pipe-up\"></div>\n        <div style={ {backgroundColor: 'white'}} className=\"pipe-down\"></div>\n      <div className=\"main-circ-box\">\n        <div style={{border: '15px solid #ffffff'}} \n        className=\"inner-circle\"></div>\n      </div>\n      <div className=\"report-img-box\">\n        <img src={downpayment} alt=\"\" className=\"report-img\"/>\n      </div>\n      <div className=\"left-img\">\n        <img src={hurry} alt=\"\" className=\"hurry-img\"/>\n      </div>\n\n      <div className=\"result-info-1\">\n        <h1 className=\"repo-title\">Save</h1>\n        {/* <h1 className=\"saving\">{currentPlan.monthly_savings ? `$${currentPlan.monthly_savings}.00` : '0'} </h1> */}\n        <h1 className=\"saving\">{currentPlan.monthly_savings} </h1>\n        <h1 className=\"repo-title\">monthly for</h1>\n        <h1 className=\"saving\">{ year } yrs </h1>\n        </div>\n\n      <div className=\"result-info-2\">\n        <h1 className=\"repo-title\">Your DreamHome</h1>\n        <h1 className=\"repo-title\">ready to buy</h1>\n        <h1 className=\"repo-title\">date is</h1>\n        <h1 className=\"saving\">{moment(currentPlan.goal_end_date).format('LL')} </h1>\n        {/* <h1 className=\"saving\">{moment().to(currentPlan.goal_end_date)} </h1> */}\n        </div>\n\n\n      </section>\n      : ''\n    }\n\n    </>\n  )\n}\n",{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","severity":1,"message":"92","line":7,"column":24,"nodeType":"93","messageId":"94","endLine":7,"endColumn":37},{"ruleId":"95","severity":1,"message":"96","line":38,"column":7,"nodeType":"97","endLine":38,"endColumn":42},{"ruleId":"91","severity":1,"message":"98","line":1,"column":16,"nodeType":"93","messageId":"94","endLine":1,"endColumn":25},{"ruleId":"91","severity":1,"message":"99","line":2,"column":16,"nodeType":"93","messageId":"94","endLine":2,"endColumn":24},{"ruleId":"91","severity":1,"message":"100","line":4,"column":9,"nodeType":"93","messageId":"94","endLine":4,"endColumn":18},{"ruleId":"91","severity":1,"message":"101","line":14,"column":9,"nodeType":"93","messageId":"94","endLine":14,"endColumn":16},{"ruleId":"91","severity":1,"message":"102","line":15,"column":9,"nodeType":"93","messageId":"94","endLine":15,"endColumn":15},{"ruleId":"91","severity":1,"message":"103","line":2,"column":28,"nodeType":"93","messageId":"94","endLine":2,"endColumn":36},{"ruleId":"91","severity":1,"message":"98","line":2,"column":38,"nodeType":"93","messageId":"94","endLine":2,"endColumn":47},{"ruleId":"104","severity":1,"message":"105","line":23,"column":71,"nodeType":"106","messageId":"107","endLine":23,"endColumn":72,"suggestions":"108"},{"ruleId":"104","severity":1,"message":"105","line":24,"column":71,"nodeType":"106","messageId":"107","endLine":24,"endColumn":72,"suggestions":"109"},{"ruleId":"95","severity":1,"message":"96","line":7,"column":7,"nodeType":"97","endLine":9,"endColumn":75},{"ruleId":"110","severity":1,"message":"111","line":106,"column":7,"nodeType":"97","endLine":106,"endColumn":33},"no-native-reassign",["112"],"no-negated-in-lhs",["113"],"@typescript-eslint/no-unused-vars","'AnswerContext' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'useEffect' is defined but never used.","'Redirect' is defined but never used.","'getReport' is defined but never used.","'history' is assigned a value but never used.","'report' is assigned a value but never used.","'useState' is defined but never used.","no-useless-escape","Unnecessary escape character: \\-.","Literal","unnecessaryEscape",["114","115"],["116","117"],"jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","no-global-assign","no-unsafe-negation",{"messageId":"118","fix":"119","desc":"120"},{"messageId":"121","fix":"122","desc":"123"},{"messageId":"118","fix":"124","desc":"120"},{"messageId":"121","fix":"125","desc":"123"},"removeEscape",{"range":"126","text":"127"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"128","text":"129"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"130","text":"127"},{"range":"131","text":"129"},[703,704],"",[703,703],"\\",[784,785],[784,784]]