[{"/Users/tim/turing/4module/FEE_DreamHome/src/index.tsx":"1","/Users/tim/turing/4module/FEE_DreamHome/src/reportWebVitals.ts":"2","/Users/tim/turing/4module/FEE_DreamHome/src/components/App/App.tsx":"3","/Users/tim/turing/4module/FEE_DreamHome/src/types.tsx":"4","/Users/tim/turing/4module/FEE_DreamHome/src/apiCalls.tsx":"5","/Users/tim/turing/4module/FEE_DreamHome/src/components/Report/Report.tsx":"6","/Users/tim/turing/4module/FEE_DreamHome/src/components/Home/Home.tsx":"7","/Users/tim/turing/4module/FEE_DreamHome/src/components/NavBar/NavBar.tsx":"8","/Users/tim/turing/4module/FEE_DreamHome/src/components/Journey/Journey.tsx":"9","/Users/tim/turing/4module/FEE_DreamHome/src/components/Survey/Survey.tsx":"10","/Users/tim/turing/4module/FEE_DreamHome/src/components/Question/Question.tsx":"11","/Users/tim/turing/4module/FEE_DreamHome/src/components/Error/Error.tsx":"12","/Users/tim/turing/4module/FEE_DreamHome/src/components/GenerateReport/GenerateReport.tsx":"13","/Users/tim/turing/4module/FEE_DreamHome/src/components/Cube/Cube.tsx":"14","/Users/tim/turing/4module/FEE_DreamHome/src/components/ReportCategory/ReportCategory.tsx":"15","/Users/tim/turing/4module/FEE_DreamHome/src/components/NavItem/NavItem.tsx":"16"},{"size":392,"mtime":1610225263670,"results":"17","hashOfConfig":"18"},{"size":425,"mtime":1609887174204,"results":"19","hashOfConfig":"18"},{"size":3156,"mtime":1610561350882,"results":"20","hashOfConfig":"18"},{"size":1012,"mtime":1610506289859,"results":"21","hashOfConfig":"18"},{"size":884,"mtime":1610562058715,"results":"22","hashOfConfig":"18"},{"size":5758,"mtime":1610492737352,"results":"23","hashOfConfig":"18"},{"size":1465,"mtime":1610566322166,"results":"24","hashOfConfig":"18"},{"size":1789,"mtime":1610561350892,"results":"25","hashOfConfig":"18"},{"size":1668,"mtime":1610562814232,"results":"26","hashOfConfig":"18"},{"size":2351,"mtime":1610566075003,"results":"27","hashOfConfig":"18"},{"size":3952,"mtime":1610561350895,"results":"28","hashOfConfig":"18"},{"size":1248,"mtime":1610561350887,"results":"29","hashOfConfig":"18"},{"size":2564,"mtime":1610563328475,"results":"30","hashOfConfig":"18"},{"size":1610,"mtime":1610399896746,"results":"31","hashOfConfig":"18"},{"size":5010,"mtime":1610492737354,"results":"32","hashOfConfig":"18"},{"size":328,"mtime":1610422027322,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"148chyl",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"36"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"36"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"36"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"36"},"/Users/tim/turing/4module/FEE_DreamHome/src/index.tsx",[],["76","77"],"/Users/tim/turing/4module/FEE_DreamHome/src/reportWebVitals.ts",[],"/Users/tim/turing/4module/FEE_DreamHome/src/components/App/App.tsx",["78","79","80","81"],"import React, {useState , useEffect, useContext, useRef} from 'react';\nimport {AnswerContext, QuestionContext, ReportContext, AllQuestionFormat} from '../../types'\nimport {getQuestions} from '../../apiCalls';\nimport {Switch, Route, __RouterContext, Redirect} from 'react-router';\nimport { useTransition, animated } from \"react-spring\";\n\nimport NavBar from '../NavBar/NavBar';\nimport Home from '../Home/Home';\nimport Journey from '../Journey/Journey';\nimport {Survey} from '../Survey/Survey';\nimport {Question} from '../Question/Question';\nimport GenerateReport from '../GenerateReport/GenerateReport';\nimport Report from '../Report/Report'\nimport Error from '../Error/Error';\n\n\nconst App:React.FC = () =>{\n\n  const [questions, updateQuestions] = useState<any>({});\n  const [answers, updateAllAnswers] = useState<any>({});\n  const [report, updateReport] = useState<any>(null);\n  const [errorMessage, setError] = useState<any>('Oops an error has occurred')\n  const [errorNum, setErrorNum] = useState<any>(404)\n  const { location } = useContext<any>(__RouterContext)\n  const unmounted = useRef(false)\n  \n  const transitions = useTransition(location, location => location.pathname, {\n    from: {opacity: 0, transform:'translate(100%, 0)'},\n    enter: {opacity: 1, transform:'translate(0%, 0)'},\n    leave: {opacity: 0, transform:'translate(-50%, 0)'},\n  })\n\n  const buildAnswers = (questions: AllQuestionFormat | {}): void => {\n    const answerKey = Object.keys(questions).reduce((acc: any,cur)=>{\n        acc[cur] = ''\n        return acc\n      },{})\n      updateAllAnswers(answerKey)\n  }\n\n  const populateQuestions = async () =>{\n    // if (!unmounted.current){\n      const data = await getQuestions()\n      console.log('getting data')\n\n    // await data\n    buildAnswers(data)\n    updateQuestions(data)\n    // }\n  }\n\n  useEffect(() => {\n    console.log('yeet')\n    populateQuestions()\n    // return () => { unmounted.current = true }\n  },[]);\n\n  return (\n    <QuestionContext.Provider value={questions}>\n      <AnswerContext.Provider value={answers}>\n        <ReportContext.Provider value={report}>\n        <NavBar/>\n        {transitions.map(({item, props, key}) => (\n          <animated.div key={key} style={props}>\n          <Switch location={item}>\n            <Redirect exact from=\"/\" to=\"/home\" />\n            <Route exact path=\"/home\" component={Home}/>\n            <Route exact path=\"/journey\" component={Journey}/>\n            <Route exact path=\"/survey\" component={Survey}/>\n            <Route exact path=\"/question\" component={()=><Question\n                updateAllAnswers={updateAllAnswers}/>\n                }/>\n            <Route exact path=\"/generate_report\" component={()=><GenerateReport\n                updateReport={updateReport}/>\n                }/>\n            <Route exact path=\"/report\" component={()=> <Report/>}/>\n            <Route path='/*' component={() => <Error\n              errorMessage={errorMessage} errorNum={errorNum}/>\n              }/>\n          </Switch>\n          </animated.div>\n        ))}\n        </ReportContext.Provider>\n      </AnswerContext.Provider>\n    </QuestionContext.Provider>\n  );\n}\nexport default App;\n","/Users/tim/turing/4module/FEE_DreamHome/src/types.tsx",[],"/Users/tim/turing/4module/FEE_DreamHome/src/apiCalls.tsx",["82"],"import { Answers } from './types';\n\nexport const getQuestions = async () => {\n  const response = await fetch('https://dreamhome-mvp.herokuapp.com/api/v1/education')\n  if (response.ok) {\n    return await response.json()\n  } else {\n    return response\n  }\n};\n\n//POST endpoint: 'https://dreamhome-mvp.herokuapp.com/api/v1/report'\n\nexport const getReport = async (id: string) => {\n  const response = await fetch(`https://dreamhome-mvp.herokuapp.com/api/v1/report/${id}`)\n  if (response.ok) {\n    return await response.json()\n  } else {\n    return response\n  }\n}\n\n// export const getReport = async (id: string) => {\n//   const response = await fetch(`https://dreamhome-mvp.herokuapp.com/api/v1/report/${id}`)\n//   if (response.ok) {\n//     return await response.json()\n//   } else {\n//     return response\n//   }\n// }\n// GET report: https://dreamhome-mvp.herokuapp.com/api/v1/report/${id}\n","/Users/tim/turing/4module/FEE_DreamHome/src/components/Report/Report.tsx",["83","84"],"//imports\nimport React, {useContext } from 'react'\nimport {ReportContext} from '../../types'\nimport { Cube } from '../Cube/Cube';\nimport './Report.css';\nimport { ReportCategory } from '../ReportCategory/ReportCategory';\nimport {Spring} from 'react-spring/renderprops';\nimport { Link } from 'react-router-dom'\nimport back_img from '../../images/report/Big Shoes - Jumping On One leg Pose.png';\n\nconst Report = () => {\n\n  let userReport = useContext(ReportContext)\n\n  const displayAnalysisSections = () =>{\n    const reportData = Object.keys(userReport)\n\n    return reportData.map((data, key) =>{\n      let subtitle_1 = Object.keys(userReport[data])[0].replace(/_|\\-/g, \" \")\n      let subtitle_2 = Object.keys(userReport[data])[1].replace(/_|\\-/g, \" \")\n\n      return (\n        <ReportCategory\n\n          position={key + 1}\n          key={key}\n          plan={userReport[data].ten_year_plan}\n          categoryName={[data]}\n          categoryMainNumber={\n            userReport[data].zip_code\n            || userReport[data].based_on_rent\n            || userReport[data].monthly_principal\n            || userReport[data].down_payment_percentage_selected\n          }\n          categoryMainTitle={subtitle_1}\n          categorySubtitle={subtitle_2}\n          categorySecondNumber={\n            userReport[data].location\n            || userReport[data].goal_principal\n            || userReport[data].estimated_true_monthly\n            || userReport[data].down_payment_saved\n          }\n          categoryID={key + 1}\n          />\n      )\n    })\n  }\n\n  return (\n    <>\n    {!userReport ? \n    <>\n      <div className=\"loading-box\">\n        <h1 className='loading-message-1'>we are building you a report...</h1>\n      </div>\n      <div className=\"loading-box\">\n        <h1 className='loading-message-2'>just a second...</h1>\n      </div>\n      <Cube/> \n    </>:\n    <>\n     <section className=\"report-section\">\n        <div className='inner-container'>\n          <div className=\"app-title\">\n            <div className=\"title-container\">\n              <h1 className='title header'>My</h1>\n              <h1 className='title-2 header'>Dream Home</h1>\n              <div className=\"number-title-box\">\n                <h2 className=\"number-title\">My Numbers</h2>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"report-numbers-box\">\n\n            <div className=\"num \">\n              <div className=\"num-ci-box-up\">\n                <h1 className=\"num-ci-title\">Property tax</h1>\n              </div>\n              <Spring\n                config={{delay: 100, duration: 1000}}\n                from={{ number: 0 }}\n                to={{ number: userReport.monthly.add_ons.property_tax }}>\n                {props => <div className=\"num-ci-box-down\">\n                <h1 className=\"num-ci-data\">{props.number.toFixed()}</h1>\n              </div>}\n              </Spring>\n            </div>\n            <div className=\"num \">\n              <div className=\"num-ci-box-up\">\n                <h1 className=\"num-ci-title\">Downpayment %</h1>\n              </div>\n              <Spring\n                config={{delay: 100, duration: 1000}}\n                from={{ number: 0 }}\n                to={{ number: userReport.downpayment.down_payment_percentage_selected }}>\n                {props =>\n                <div className=\"num-ci-box-down\">\n                  <h1 className=\"num-ci-data\">{props.number.toFixed()}</h1>\n                </div>}\n              </Spring>\n\n            </div>\n            <div className=\"num \">\n              <div className=\"num-ci-box-up\">\n                <h1 className=\"num-ci-title\">Mortgage term</h1>\n              </div>\n\n              <Spring\n                config={{delay: 100, duration: 1000}}\n                from={{ number: 0 }}\n                to={{ number: 30 }}>\n                {props =>\n                <div className=\"num-ci-box-down\">\n                  <h1 className=\"num-ci-data\">{`${props.number.toFixed()}yrs`}</h1>\n                </div>}\n              </Spring>\n\n            </div>\n            <div className=\"num \">\n              <div className=\"num-ci-box-up\">\n                <h1 className=\"num-ci-title\">Credit Score</h1>\n              </div>\n\n              <Spring\n                config={{delay: 100, duration: 1000}}\n                from={{ number: 0 }}\n                to={{ number: 30 }}>\n                {props =>\n                <div className=\"num-ci-box-down\">\n                  <h1 className=\"num-ci-data\">{`${props.number.toFixed()}yrs`}</h1>\n                </div>}\n              </Spring>\n\n            </div>\n            <div className=\"num \">\n              <div className=\"num-ci-box-up\">\n                <h1 className=\"num-ci-title\">Downpayment #</h1>\n              </div>\n\n              <Spring\n                config={{delay: 100, duration: 1000}}\n                from={{ number: 0 }}\n                to={{ number: userReport.downpayment.down_payment_saved }}>\n                {props =>\n                <div className=\"num-ci-box-down\">\n                  <h1 className=\"num-ci-data\">{`$${props.number.toFixed()}`}</h1>\n                </div>}\n              </Spring>\n\n            </div>\n\n          </div>\n\n          <div className=\"report-title\">\n            <h1 className=\"big-report\">Report</h1>\n          </div>\n          <div className='report-img-box_1'>\n            <img src={back_img} alt=\"\" className='report_img'/>\n          </div>\n        </div>\n\n    </section>\n\n    {displayAnalysisSections()}\n\n    <div className=\"sigup\">\n      <h1 className=\"fina-mess\">Sign-up\n      <Link to='/home'>\n        <span className='link' >\n          here\n        </span>\n      </Link>\n      if you want to know more...</h1>\n    </div>\n    </>\n    }\n    </>\n  )\n}\n\nexport default Report\n","/Users/tim/turing/4module/FEE_DreamHome/src/components/Home/Home.tsx",[],"/Users/tim/turing/4module/FEE_DreamHome/src/components/NavBar/NavBar.tsx",["85","86"],"import React, { useState, useContext }from 'react'\nimport './NavBar.css'\nimport {Link} from 'react-router-dom'\nimport { IoIosCloseCircleOutline } from \"react-icons/io\";\nimport { FiMenu } from \"react-icons/fi\";\nimport { NavItem } from \"../NavItem/NavItem\";\nimport {ReportContext} from '../../types'\n\nconst NavBar:React.FC = () => {\n\n  const [open, setOpen] = useState<boolean>(false);\n  \n  const closeBar = () => {\n    window.scrollTo(0, 1000)\n    setOpen(false)\n  }\n\n  return (\n    <nav className='nav-container'>\n      <ul className=\"nav-bar\" >\n        <h1 className='menu-title'>menu</h1>\n        <NavItem \n          open={open} \n          setOpen={setOpen} \n          icon={!open ? <FiMenu data-testid=\"dropdown\" className='icon'/>\n          : <IoIosCloseCircleOutline className='icon'/>} >\n          <DropdownMenu open={open} setOpen={setOpen}/>\n        </NavItem>\n      </ul>\n    </nav>\n  )\n}\n\nconst DropdownMenu = (props:any) => {\n  let userReport = useContext(ReportContext)\n\n  const DropdownItem = (props: any) => {\n    \n    return(\n\n      <a href=\"#\" className=\"menu-item\" >\n        {props.children}\n      </a>\n    );\n  }\n\n  return (\n    <div className=\"dropdown\" >\n\n      <Link to=\"/home\" data-testid='to-home' onClick={()=>props.setOpen(false)}>\n        <DropdownItem \n        >Home</DropdownItem>\n      </Link>\n\n      <Link to=\"/journey\" data-testid='to-journey' onClick={()=>props.setOpen(false)}>\n        <DropdownItem onClick={props.setOpen}\n        >Journey</DropdownItem>\n      </Link>\n\n      {/* <DropdownItem data-testid='to-login'>Login</DropdownItem> */}\n\n      {userReport && <Link to=\"/report\"  data-testid='to-login' onClick={()=>props.setOpen(false)}>\n        <DropdownItem \n      >Report</DropdownItem>\n      </Link>}\n\n    </div>\n  )\n}\n\n\n\n\n\nexport default NavBar\n","/Users/tim/turing/4module/FEE_DreamHome/src/components/Journey/Journey.tsx",["87"],"import React  from 'react';\nimport './Journey.css'\nimport bkg_img from '../../images/journey/Big Shoes - Hero.png'\nimport {Link} from 'react-router-dom'\n\nconst Journey:React.FC = () => {\n\n  return (\n\n    <section data-testid='journey-section' className='journey-section'>\n\n      <div className=\"container\">\n\n        <div data-testid='information-container' className='information-container'>\n          <div className=\"info-box\">\n            <h2 className='info'>\n              Hi, my name is Teki and want to help you find\n              your Dream Home! We will focus on either building a plan for you that will help you reach your goals, or see what your possible plans for you based on your current situation. <br/> With the information you give me, I can set you on a path to your Dream Home!\n              </h2>\n          </div>\n\n        </div>\n\n        <div className=\"box-title\">\n          <div className=\"title-container\">\n            <h1 className='title'>My</h1>\n            <h1 className='title-2'>Dream Home</h1>\n          </div>\n        </div>\n\n        <div className=\"action-box\">\n          <div className=\"action-container\">\n            <h4 className='title-2 action'>First, I need to ask you some quesions...</h4>\n          </div>\n        </div>\n\n        <div className='img-box'>\n          <img  data-testid='journey-img' src={bkg_img} alt=\"journey image\" className='journey-img'/>\n        </div>\n\n        <div className=\"btn-container\">\n          <Link to=\"/survey\">\n          <button onClick={() => window.scrollTo(0, 1000)} className=\"btn\">Start</button>\n          </Link>\n        </div>\n\n      </div>\n\n    </section>\n  )\n}\n\nexport default Journey;\n","/Users/tim/turing/4module/FEE_DreamHome/src/components/Survey/Survey.tsx",[],"/Users/tim/turing/4module/FEE_DreamHome/src/components/Question/Question.tsx",["88","89"],"import React, { useState, useContext }  from 'react';\nimport { Link } from 'react-router-dom';\nimport {QuestionContext} from '../../types';\nimport './Question.css'\nimport bkg_img from '../../images/questions/Big Shoes - Sitting On Floor.png'\nimport location_img from '../../images/questions/Charco - Location Map.png'\n\ninterface Props{\n  updateAllAnswers: any;\n}\nexport const Question: React.FC<Props> = ({updateAllAnswers}) => {\n  \n  const questionContext = useContext(QuestionContext)\n  const questionSet = Object.keys(questionContext);\n  \n  const [answerInput, updateAnswer] = useState<any>({});\n  const [index, setIndex] = useState<number>(0);\n  const [errorMessage, setErrorMessage] = useState<string>('');\n  const [hover, setHover] = useState(false);\n  \n  let currentQuestion = questionContext[questionSet[index]]\n\n    const nextQuestion = () => {\n        setErrorMessage(!answerInput[questionSet[index]] \n          ? 'Sorry but we need this information' \n          : '')\n        setIndex(index < questionSet.length && answerInput[questionSet[index]] \n          ? index + 1 \n          :  index);\n    }\n\n    const prevQuestion = () => {\n      setIndex(index - 1)\n    }\n\n    return (\n      <section className='question-section'>\n        \n        <div className=\"inner-container\">\n\n          <div className='desc-container'>\n            <div className=\"description-box\" data-testid='description-container'>\n              <h2 style={{ backgroundColor: 'black',  width: '5px'}}className='desc'>💡</h2>\n              <h1  data-testid='description-title' className=\"question-desc\">{currentQuestion?.attributes?.classification}</h1>\n              <h2  data-testid='description-body' className='desc'>{currentQuestion?.attributes?.description}</h2>\n            </div>\n          </div>\n\n        <div className='question_img-box_1'>\n          <img   data-testid='back-image-1' src={bkg_img} alt=\"Background images, avatar is stading on the leftsideof the window smiling at you\" className='question_img'/>\n        </div>\n\n        <div className='question_img-box_2'>\n          <img  data-testid='back-image-2' src={location_img} alt=\"\" className='location_img'/>\n        </div>\n\n        {errorMessage && <div className='error_box'>\n          <h3 data-testid='error-message' className='error-input'>{errorMessage}</h3>\n        </div>}\n\n        <div className=\"buttons-box\">\n          <div className=\"bx\">\n            <button className={index === 0 ? 'hidden' : 'back-btn btn'}\n              onClick={() => {prevQuestion()}}>back</button>\n          </div>\n          <div className=\"bx\">\n            {questionSet.indexOf(questionSet[index]) !== questionSet.length - 1 \n            ? <button className='next-btn btn'\n              onClick={() => {nextQuestion()}}>\n                next</button> \n            :\n              <Link to=\"/generate_report\">\n                <button \n                  data-testid='update-answers-btn'\n                  className='next-btn btn'\n                  onClick={() => {updateAllAnswers(answerInput)}}>\n                    next</button>\n              </Link>}\n          </div>\n        </div>\n\n        <div className=\"question-box\" data-testid='the-question'>\n          <p className=\"question\">{currentQuestion?.attributes?.question}</p>\n        </div>\n\n        <div className=\"input-box\">\n          <input \n            placeholder='your answer here'\n            type=\"text\" \n            className=\"input\" \n            value={answerInput[questionSet[index]] || ''\n          }\n          onChange={(e)=>updateAnswer({...answerInput, \n            [questionSet[index]]: e.target.value})}\n          />\n        </div>\n\n        <div className=\"note-box\">\n          <h4 className=\"note\">{currentQuestion?.attributes?.note}</h4>\n        </div>\n\n        <div className='floor-box'>\n          <h4 className=\"note\">{currentQuestion?.attributes?.source}</h4>\n        </div>\n\n      </div>\n    </section>\n  );\n};\n\nexport default Question\n \n","/Users/tim/turing/4module/FEE_DreamHome/src/components/Error/Error.tsx",[],"/Users/tim/turing/4module/FEE_DreamHome/src/components/GenerateReport/GenerateReport.tsx",["90","91"],"//imports\nimport React, { useContext } from 'react'\nimport { Link } from 'react-router-dom';\nimport { AnswerContext, Answers } from '../../types';\n// import { getReport, postAnswers} from '../../apiCalls'\nimport './GenerateReport.css'\nimport calculate_img from '../../images/calculate/Big Shoes - Sitting On Floor.png'\nimport back_img from '../../images/calculate/Charco - Security.png'\n\ninterface Props{\n  updateReport: any;\n}\n\nconst GenerateReport: React.FC<Props> = ({ updateReport }) => {\n\n  const answers = useContext(AnswerContext);\n\n  const requestReport = async () =>{\n    // const formattedAnswers: Answers = {\n    //   salary: answers.annual_salary,\n    //   zipcode: answers.zip_code,\n    //   credit: answers.credit_score,\n    //   monthly_debt: answers.monthly_debt,\n    //   downpayment_savings: answers.downpayment_savings,\n    //   downpayment_percentage:answers.downpayment_percentage,\n    //   rent: answers.rent,\n    //   goal_principal: answers.goal_home_price\n    // };\n    // //will need to add default values in or statements\n    // // const id = await postAnswers(formattedAnswers)\n    // // const data = await getReport()\n    // // updateReport(data)\n    // getReport().then((data) => setTimeout(() => updateReport(data), 3000))\n  }\n\n  return (\n    <section className='generate-section'>\n      <div className='inner-container'>\n\n      <div className='desc-container'>\n\n          <div className=\"description-box\">\n            <h1 className=\"question-desc\">Yearly Salary After Taxes</h1>\n            <h2 className='desc'>\"There’s no single answer to the question “Should I rent or buy?” Your solution depends on where you live, whether renting or buying an equivalent home is cheaper, and on additional assumptions you can include in your analysis</h2>\n            <h2 className='desc'>Don't worry we will calculate everything for you</h2>\n          </div>\n        </div>\n\n        <div className='question_img-box_1'>\n          <img src={calculate_img} alt=\"teki-sitting\" className='question_img'/>\n        </div>\n\n        <div className='question_img-box_2'>\n          <img src={back_img} alt=\"background-graphics\" className='location_img'/>\n        </div>\n\n        <div className=\"buttons-box\">\n          <Link to=\"/report\">\n          <button className='submit-btn btn'\n            onClick={requestReport}>\n          Generate Report</button>\n          </Link>\n        </div>\n\n        <div className=\"box-detail-1\"></div>\n        <div className=\"box-detail-2\"></div>\n\n      </div>\n    </section>\n  )\n}\n\nexport default GenerateReport;\n","/Users/tim/turing/4module/FEE_DreamHome/src/components/Cube/Cube.tsx",[],"/Users/tim/turing/4module/FEE_DreamHome/src/components/ReportCategory/ReportCategory.tsx",["92"],"import React, {useState, useEffect } from 'react'\nimport moment from 'moment'\n\nimport location from '../../images/report/Charco - Location Map.png';\nimport plant_1 from '../../images/extras/Fancy Plants - Solo Plant.png';\nimport plant_2 from '../../images/extras/Fancy Plants - Solo Plant copy.png';\nimport downpayment from '../../images/report/Charco - Work at Home.png';\nimport hurry from '../../images/report/Big Shoes - Dynamic Pose.png';\n\nexport const ReportCategory = (props: any ) => {\n  //interface for props\n  const [year, setYear] = useState<string>('one');\n  const [currentPlan, setCurrentPlan] = useState(props.plan);\n\n  const displayPlanBtn = () => {\n    return Object.keys(props.plan).map((btn, index)=> {\n      return (\n        <button\n          onClick={() => updateValue(btn)}\n\n          key={index}\n          className={\n            index % 2 === 0\n            ? \" plan-btn btn y-btn\"\n            : index % 3 === 0\n            ? \"btn-1 y-btn\"\n            :\"btn-2 y-btn\"\n          }>{index +1}\n            yr\n          </button>\n      )\n    })\n  }\n\n  useEffect(() => {\n    if(props.plan){\n      setCurrentPlan(props.plan[year])\n    }\n  }, [props.plan, year])\n\n  const updateValue = (year: any) => {\n    setYear(year)\n    setCurrentPlan(props.plan[year])\n  }\n\n  return (\n    <>\n    <section\n      style={props.position% 2 === 0 ? {backgroundColor: 'white'}: {}}\n      className=\"analysis-section\">\n      <div\n        style={props.position% 2 === 0 ? {backgroundColor:'#89BD9E'}: {backgroundColor: 'white'}}\n        className=\"pipe-up\"></div>\n      <div\n        style={props.position% 2 === 0 ? {backgroundColor:'#89BD9E'}: {backgroundColor: 'white'}}\n        className=\"pipe-down\"></div>\n      <div className=\"main-circ-box\"><div\n        style={props.position% 2 === 0 ? {border:'15px solid #89BD9E'}: {border: '15px solid #ffffff'}}\n        className=\"inner-circle\"></div>\n      </div>\n      <div className=\"report-img-box\">\n        <img src={location} alt=\"location-illustration-1\" className=\"report-img\"/>\n      </div>\n\n      <div  className=\"category-box\">\n        <h1 className=\"category-title\">{props.categoryName || ''}</h1>\n      </div>\n      <div className=\"report-info-1\">\n        {/* <h1 className=\"repo-title\">Location</h1> */}\n        <h1 className=\"repo-title\">{props.categoryMainTitle}</h1>\n      </div>\n\n      {!props.plan\n        ? <div className=\"report-info-2\">\n        <h1 className=\"repo-title\">{props.categorySubtitle || ''}</h1>\n        <h1 className=\"repo-title\">{props.categorySecondNumber || 0}</h1>\n        </div>\n        :\n        <>\n        <div className=\"plan-box\">\n          {displayPlanBtn()}\n          <h1 className=\"repo-title\">{}</h1>\n        </div>\n        <div className=\"btns-inst\">\n          <h1 className=\"inst-title\">Select a year to see your plan</h1>\n        </div>\n        </>\n      }\n\n      <div className=\"report-insight\">\n        {/* <h1 className=\"insight-title\">insight:</h1> */}\n        <h1 className=\"insight\">Property taxes and interest rates can vary by location.</h1>\n      </div>\n\n      <div className=\"category-image\">\n        {props.position % 2 === 0 && <img src={plant_1} alt=\"blue-plant\" className='plant-1'/>}\n      </div>\n      {!props.plan && <div className=\"category-image-2\">\n        <img src={plant_2} alt=\"blue-plant\" className='plant-1'/>\n        {/* <h1 className=\"insight-title\">{''}</h1> */}\n      </div>}\n\n      <h3 className=\"solo_number\">{props.categoryID || ''}</h3>\n      <h1 className=\"zip-title\"></h1>\n      <h1 className=\"report-zip\">{props.categoryMainNumber|| '' }</h1>\n    </section>\n\n    {props.plan\n      ?<section className='analysis-section'>\n        <div style={ {backgroundColor: 'white'}} className=\"pipe-up\"></div>\n        <div style={ {backgroundColor: 'white'}} className=\"pipe-down\"></div>\n      <div className=\"main-circ-box\">\n        <div style={{border: '15px solid #ffffff'}}\n        className=\"inner-circle\"></div>\n      </div>\n      <div className=\"report-img-box\">\n        <img src={downpayment} alt=\"location-illustration\" className=\"report-img\"/>\n      </div>\n      <div className=\"left-img\">\n        <img src={hurry} alt=\"tall-man\" className=\"hurry-img\"/>\n      </div>\n\n      <div className=\"result-info-1\">\n        <h1 className=\"repo-title\">Save</h1>\n        {/* <h1 className=\"saving\">{currentPlan.monthly_savings ? `$${currentPlan.monthly_savings}.00` : '0'} </h1> */}\n        <h1 className=\"saving\">{currentPlan.monthly_savings} </h1>\n        <h1 className=\"repo-title\">monthly for</h1>\n        <h1 className=\"saving\">{ year } yrs </h1>\n        </div>\n\n      <div className=\"result-info-2\">\n        <h1 className=\"repo-title\">Your DreamHome</h1>\n        <h1 className=\"repo-title\">ready to buy</h1>\n        <h1 className=\"repo-title\">date is</h1>\n        <h1 className=\"saving\">{moment(currentPlan.goal_end_date).format('LL')} </h1>\n        {/* <h1 className=\"saving\">{moment().to(currentPlan.goal_end_date)} </h1> */}\n        </div>\n\n\n      </section>\n      : ''\n    }\n\n    </>\n  )\n}\n","/Users/tim/turing/4module/FEE_DreamHome/src/components/NavItem/NavItem.tsx",["93"],"import React  from 'react';\n \nexport const NavItem = (props: any) =>{\n\n  return( \n    <li className=\"nav-item\" >\n      <a href=\"#\" \n        data-testid='menu-button'\n        className=\"icon-button\" onClick={() =>props.setOpen(!props.open)}>\n        {props.icon}\n      </a>\n\n      {props.open && props.children}\n    </li>\n  )\n}\n\n",{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","severity":1,"message":"99","line":22,"column":24,"nodeType":"100","messageId":"101","endLine":22,"endColumn":32},{"ruleId":"98","severity":1,"message":"102","line":23,"column":20,"nodeType":"100","messageId":"101","endLine":23,"endColumn":31},{"ruleId":"98","severity":1,"message":"103","line":25,"column":9,"nodeType":"100","messageId":"101","endLine":25,"endColumn":18},{"ruleId":"104","severity":1,"message":"105","line":56,"column":5,"nodeType":"106","endLine":56,"endColumn":7,"suggestions":"107"},{"ruleId":"98","severity":1,"message":"108","line":1,"column":10,"nodeType":"100","messageId":"101","endLine":1,"endColumn":17},{"ruleId":"109","severity":1,"message":"110","line":19,"column":68,"nodeType":"111","messageId":"112","endLine":19,"endColumn":69,"suggestions":"113"},{"ruleId":"109","severity":1,"message":"110","line":20,"column":68,"nodeType":"111","messageId":"112","endLine":20,"endColumn":69,"suggestions":"114"},{"ruleId":"98","severity":1,"message":"115","line":13,"column":9,"nodeType":"100","messageId":"101","endLine":13,"endColumn":17},{"ruleId":"116","severity":1,"message":"117","line":41,"column":7,"nodeType":"118","endLine":41,"endColumn":42},{"ruleId":"119","severity":1,"message":"120","line":38,"column":11,"nodeType":"118","endLine":38,"endColumn":102},{"ruleId":"98","severity":1,"message":"121","line":19,"column":10,"nodeType":"100","messageId":"101","endLine":19,"endColumn":15},{"ruleId":"98","severity":1,"message":"122","line":19,"column":17,"nodeType":"100","messageId":"101","endLine":19,"endColumn":25},{"ruleId":"98","severity":1,"message":"108","line":4,"column":25,"nodeType":"100","messageId":"101","endLine":4,"endColumn":32},{"ruleId":"98","severity":1,"message":"123","line":16,"column":9,"nodeType":"100","messageId":"101","endLine":16,"endColumn":16},{"ruleId":"124","severity":1,"message":"125","line":104,"column":7,"nodeType":"118","endLine":104,"endColumn":33},{"ruleId":"116","severity":1,"message":"117","line":7,"column":7,"nodeType":"118","endLine":9,"endColumn":75},"no-native-reassign",["126"],"no-negated-in-lhs",["127"],"@typescript-eslint/no-unused-vars","'setError' is assigned a value but never used.","Identifier","unusedVar","'setErrorNum' is assigned a value but never used.","'unmounted' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'populateQuestions'. Either include it or remove the dependency array.","ArrayExpression",["128"],"'Answers' is defined but never used.","no-useless-escape","Unnecessary escape character: \\-.","Literal","unnecessaryEscape",["129","130"],["131","132"],"'closeBar' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'hover' is assigned a value but never used.","'setHover' is assigned a value but never used.","'answers' is assigned a value but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","no-global-assign","no-unsafe-negation",{"desc":"133","fix":"134"},{"messageId":"135","fix":"136","desc":"137"},{"messageId":"138","fix":"139","desc":"140"},{"messageId":"135","fix":"141","desc":"137"},{"messageId":"138","fix":"142","desc":"140"},"Update the dependencies array to be: [populateQuestions]",{"range":"143","text":"144"},"removeEscape",{"range":"145","text":"146"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"147","text":"148"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"149","text":"146"},{"range":"150","text":"148"},[1936,1938],"[populateQuestions]",[662,663],"",[662,662],"\\",[740,741],[740,740]]